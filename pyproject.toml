[tool.poetry]
name = "styxcompiler"
version = "0.1.1"
description = "Boutiques code generator"
authors = ["Florian Rupprecht <floruppr@gmail.com>"]
license = "LGPL-2.1"
readme = "README.md"
packages = [{include = "styx", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
styxdefs = "^0.4.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
mypy = "^1.10.1"
pre-commit = "^4.0.1"
pytest-cov = "^6.0.0"
ruff = "^0.8.0"

[tool.poetry.group.docs.dependencies]
pdoc = "^15.0.0"

[tool.poetry.extras]
docs = ["pdoc"]

[tool.poetry.scripts]
styx = "styx.main:main"

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.mypy]
ignore_missing_imports = true

[tool.ruff]
preview = true
extend-exclude = ["examples", "src/styx/boutiques/model.py"]
line-length = 120
indent-width = 4
src = ["src"]
target-version = "py311"

[tool.ruff.lint]
select = ["ANN", "D", "E", "F", "I"]
ignore = [
  "D100",  # Missing docstring in public module.
  "D101",  # Missing docstring in public class.
  "D102",  # Missing docstring in public method.
  "D103",  # Missing docstring in public function.
  "D107"  # Missing docstring in __init__.
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
  "ANN401"  # Dynamic type expression ('Any')
]

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"
